name: kubernetes-deploy-action
on: [push]
jobs:
  ssh-remote-cmds:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Get version
        shell: bash
        run: echo "##[set-output name=version;]$(echo ${GITHUB_RUN_NUMBER})"
        id: get_version
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Frontend image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: frontend-k8s.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: aheed/tumbler_frontend:${{ steps.get_version.outputs.version }}
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/scribble/myremotesubdir/tumbler
            git checkout ${{ steps.extract_branch.outputs.branch }}
            git pull
            kubectl create secret tls tumbler-secret-tls --cert=fullchain.pem --key=privkey.pem || true
            docker-compose build
            docker build -f frontend-k8s.Dockerfile -t tumbler_frontend_k8s:build${{ steps.get_version.outputs.version }} .
            kind load docker-image tumbler_backend:latest --name my-cluster || true
            kind load docker-image tumbler_frontend_k8s:build${{ steps.get_version.outputs.version }} --name my-cluster || true
            kubectl apply -f kubernetes/backend-deployment.yaml
            kubectl apply -f kubernetes/deployment.yaml
            kubectl apply -f kubernetes/backend-service.yaml
            kubectl apply -f kubernetes/service.yaml
            kubectl apply -f kubernetes/ingress.yaml
